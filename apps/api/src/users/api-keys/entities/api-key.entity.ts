import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';
import { User } from '../../entities/user.entity';
import { ApiProperty } from '@nestjs/swagger';

@Entity()
export class ApiKey {
  @ApiProperty({
    example: '1234',
    description: 'The primary key in the database',
  })
  @PrimaryGeneratedColumn()
  id: number;

  @ApiProperty({
    example: '1234',
    description: 'The ApiKey generated by a hashed uuid',
  })
  @Column()
  key: string;

  @ApiProperty({
    example: '1234',
    description: 'The randomly generated ApiKey',
  })
  @Column()
  uuid: string;

  @ApiProperty({
    example: 'my_username',
    description: 'The user who owns this ApiKey',
  })
  @ManyToOne(() => User, (user) => user.apiKeys, {
    nullable: true,
    onDelete: 'CASCADE',
  })
  user: User;

  // NOTE: As an exercise, you could create a new entity called "Scope" and establish
  // a Many-to-Many relationship between API keys and scopes. With the scopes feature, user
  // could selectively grant specific permissions/scopes to given API keys. For example, some
  // API keys could only let 3rd party applications "Read" data, but not modify it, etc.
  // @Column()
  // scopes: Scope[]
}
